# Main http configuration block
http {
    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Custom logging format for debugging
    log_format custom '$remote_addr - $request_uri -> $server_name [$status]';
    access_log /var/log/nginx/custom_access.log custom;
    
    # Define upstream servers (Node.js instances)
    upstream chat_backend {
        # Use IP hash for sticky sessions (important for WebSocket connections)
        ip_hash;
        
        # List your Node.js instances here
        server chat_app:3001;
        server chat_app:3002;
        server chat_app:3003;
        server chat_app:3004;
        
        # Keepalive connections
        keepalive 32;
    }

    upstream auth_backend {
        server vaultbox_auth:5000;
    }

    # Rate limiting zone definitions
    limit_req_zone $binary_remote_addr zone=chat_limit:10m rate=10r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # WebSocket connection timeout
    map $http_upgrade $connection_timeout {
        default 600s;
        websocket 3600s;
    }

    server {
        listen 80;
        server_name vaultbox;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
        add_header Referrer-Policy "strict-origin-secure";
        # Modified CSP to allow fonts
        add_header Content-Security-Policy "default-src 'self'; connect-src 'self' ws: wss:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; font-src 'self' data:;";

        # SSL configuration (recommended)
        listen 443 ssl;
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Buffer size for WebSocket connections
        client_body_buffer_size 128k;
        client_max_body_size 100m;

        # WebSocket connection timeouts
        client_header_timeout 60s;
        client_body_timeout 60s;
        keepalive_timeout 65s;
        send_timeout 60s;

        # Gzip compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript font/woff2 font/woff;

        # Rate limiting
        limit_req zone=chat_limit burst=20 nodelay;
        limit_conn conn_limit 10;

        # Root directory for the React application
        root /react-app/dist;  # Replace with your actual React build path
        index index.html;
        
        # Adding endpoint for auth backend
        location ~* ^/api/auth.*$ {
            proxy_pass http://auth_backend;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_set_header Host $http_host;
        }

        # Channels API endpoint - Place specific routes BEFORE the catch-all route
        location ~* ^/chat_api/channels.*$ {
            proxy_pass http://chat_backend;
            
            # Headers
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass the original host header
            proxy_set_header Host $http_host;
        }

        # Messages API endpoint - Place specific routes BEFORE the catch-all route
        location ~* ^/chat_api/messages.*$ {
            proxy_pass http://chat_backend;
            
            # Headers
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass the original host header
            proxy_set_header Host $http_host;
        }

        location ~* ^/chat_api/user.*$ {
            proxy_pass http://chat_backend;
            
            # Headers
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass the original host header
            proxy_set_header Host $http_host;
        }

        # WebSocket endpoint
        location ~* ^/chat/socket.io.*$ {
            proxy_pass http://chat_backend;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Headers
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pass the original host header to preserve the hostname
            proxy_set_header Host $http_host;
            
            # WebSocket specific timeouts
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 3600s;
            
            # WebSocket specific buffer sizes
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # Handle assets directory specifically
        location /assets {
            expires 1y;
            add_header Cache-Control "public";
            access_log off;
            try_files $uri =404;
        }

        # Handle fonts directory
        location /fonts {
            expires 1y;
            add_header Cache-Control "public";
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Authorization, Accept";
            
            # Enable CORS preflight
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Accept';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            try_files $uri =404;
        }

        # Handle React application routes - THIS SHOULD BE LAST
        location / {
            try_files $uri /index.html =404;
            add_header Cache-Control "no-cache";
        }

        # Deny access to .git and other sensitive files
        location ~ /\.(?!well-known).* {
            deny all;
        }
    }
}

# Events configuration for better performance
events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}
